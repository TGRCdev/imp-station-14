using Content.Client.Resources;
using Content.Shared._Impstation.Teg;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using static Robust.Client.UserInterface.StylesheetHelpers;

namespace Content.Client._Impstation.Teg.UI.Panels;

[GenerateTypedNameReferences]
public sealed partial class CirculatorPanel : PanelContainer
{
    [Dependency] private readonly IResourceCache _resource = default!;

    public string? Title { get => CircTitle.Text; set => CircTitle.Text = value; }

    public CirculatorPanel()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Stylesheet = new StyleLCD(_resource).Stylesheet;
    }

    private string FormatValue(float? value)
    {
        if (value == null)
            return new string(' ', 9);

        var num = float.Clamp(value.Value, -99999.99f, 99999.99f);
        return num.ToString("0.00");
    }

    public void UpdateState(TegCirculatorState? state)
    {
        PressureDelta.Text = FormatValue(state?.LastPressureDelta);
        MolesTransferred.Text = FormatValue(state?.LastMolesTransferred);
        Temperature.Text = FormatValue(state?.LastTemperature);
    }
}
